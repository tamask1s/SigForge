DataDelete();
FileOpen(c:\tamas\PSAA\Development\Applications\SigForge\SigForge\App\2021-03-06_18-56-15Bubi02.bdf, sig);

DataIn(sig, orig_sig_1, 2 3); 
//DataDelete(sig);
Copy(todisplay, orig_sig_1); DisplayData(todisplay,,, 000);

Copy(orig_sig_2, orig_sig_1, 0); 
Copy(orig_sig_3, orig_sig_1, 0); 
Copy(orig_sig_4, orig_sig_1);

CreateFilter(bandpass_filter2, butterworth bp, 2 2000, 0.7 900);
Filter(orig_sig_3, bandpass_filter2);
FilterReverse(orig_sig_3, bandpass_filter2);

Filter(orig_sig_1, bandpass_filter2);
FilterReverse(orig_sig_1, bandpass_filter2);

def SpikeDetector(ekgsignal, spikes, spike_radius, density_threshold)
{
    CreateFilter(bandpass_filter, butterworth bp, 2 2000, 5 20);
    CreateFilter(derivative_filter, butterworth hp, 2 2000, 10);
    CreateFilter(integrative_filter, butterworth lp, 2 2000, 8);
    CreateFilter(threshold_filter, butterworth lp, 2 2000, 1.5);
    Filter(ekgsignal, bandpass_filter);
    FilterReverse(ekgsignal, bandpass_filter);
    Filter(ekgsignal, derivative_filter);
    FilterReverse(ekgsignal, derivative_filter);
    SQR_Inplace(ekgsignal);
    Filter(ekgsignal, integrative_filter);
    FilterReverse(ekgsignal, integrative_filter);
    Copy(ekgsignal_threshold, ekgsignal);
    Filter(ekgsignal_threshold, threshold_filter);
    FilterReverse(ekgsignal_threshold, threshold_filter);
    DetectSpikes(spikes, ekgsignal, ekgsignal_threshold);
    CleanupSpikes(ekgsignal, spikes, spike_radius, density_threshold);
};

SpikeDetector(orig_sig_2, spike_signal, 0.3, 4.0);
RefineSpikes(orig_sig_3, spike_signal, 0.3);

AverageSignalAroundTrigger(orig_sig_1, MAVG, spike_signal, 0.21, 0.35, 0.03, AVGOS);
SubstractSignalAtTriggers(orig_sig_1, spike_signal, MAVG, 0.21, 0.35);
Copy(orig_sig_5, orig_sig_1);
SpikeDetector(orig_sig_1, spike_signal2, 0.3, 4.0);
RefineSpikes(orig_sig_5, spike_signal2, 0.2);

AverageSignalAroundTrigger(orig_sig_5, FAVG, spike_signal2, 0.15, 0.22, 0.0001 , FAVGOS);

Cat(orig_sig_3, spike_signal);
Cat(orig_sig_5, spike_signal);
DisplayData(orig_sig_5,,, 000);
DisplayData(MAVG, fit_width,, A1, 000);
DisplayData(AVGOS, fit_width,, C, 001);
DisplayData(FAVG, fit_width,, A1, 000);
DisplayData(FAVGOS, fit_width,, C, 001);
DisplayData(manage_windows, tile_vertically);
